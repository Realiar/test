from rsf.suproj import *

# Download data

server=os.environ.get('RSF_DATASERVER','http://www.reproducibility.org')
Fetch(['simple.su','vel.kdmig.simple'],'cwp',server=server)

# Make sure to compile SU with XDR support!

###################################################################

# Compute traveltime table
Flow('tfile.simple','vel.kdmig.simple',
     '''
     rayt2d vfile=$SOURCE tfile=$TARGET
     dt=.004 nt=501 fa=-80 na=80 
     fz=0 nz=501 dz=4 
     fx=0 nx=80 dx=40 ek=0 
     nxs=80 fxs=0 dxs=40 ms=1
     ''',stdin=0,stdout=-1)
Result('tfile','tfile.simple',
       'xmovie clip=3 n1=501 n2=80 loop=1 title="%g traveltime table" ')

# Add source-receiver headers
Flow('simplesg','simple','sushw key=sx,gx a=0,0 b=40,40')

# Kirchhoff migration
Flow('kdmig','simplesg tfile.simple',
     '''
     sukdmig2d ttfile=${SOURCES[1]}
     ft=0 fzt=0 nzt=501 dzt=4.00  angmax=80.0 nxo=80 dxo=40 nzo=150 dzo=12 
     fxt=0 nxt=80 dxt=40 fs=0 ns=80 ds=40 
     dxm=40 v0=2000 noff=1 off0=0 doff=0
     ''')
Result('kdmig','suximage')

####################################################################

# Interpolation
Flow('interp','simple',
     'suinterp | sushw key=tracl,tracr,cdp a=1,1,1 b=1,1,1')

# Filtering
Flow('filter','simple','sufilter f=0,5,20,25')

cases = {
    'simple': 'simple data',
    'filter': 'filtered',
    'interp': 'interpolated'
    }

Flow('smig','simple','sustolt cdpmin=1 cdpmax=80  dxcdp=40')
Flow('fmig','filter','sustolt cdpmin=1 cdpmax=80  dxcdp=40')
Flow('imig','interp','sustolt cdpmin=1 cdpmax=159 dxcdp=20')

for case in cases.keys():
    Result(case,'suxwigb xcur=2 title="%s" interp=1' % case)
    Result(case[0]+'mig','suxwigb xcur=2 title="%s" ' % cases[case])

End()
