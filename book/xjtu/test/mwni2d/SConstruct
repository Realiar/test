from rsf.proj import *
from math import *
import os

wf = 2*pi
nt = 501
dt = 0.004
ot = 0
nx = 501
dx = 0.01
ox = 0

for eve in (1,2,3,4):
    spike='spike%d' % eve
    tpara='tpara%d'   % eve
    para='para%d'     % eve
    Flow(spike,None,
        '''
        spike n1=%d d1=%g o1=%g n2=%d d2=%g o2=%g nsp=1 k1=%d mag=1  p2=0| 
        ricker1 frequency=15 | put unit2=km label2=Distance
        ''' % (nt,dt,ot,nx,dx,ox,eve*80-30))

    Flow(tpara,spike,
        '''
        window n1=1 | math output="-sqrt(%g*%g+(x1-2.5)*(x1-2.5)/%g/%g)+%g"
        ''' % (0.004*(eve*80-30),0.004*(eve*80-30),2,2,0.004*(eve*80-30)))

    Flow(para,[spike, tpara],
        'datstretch datum=${SOURCES[1]} ')

Flow('para','para1 para2 para3 para4','add ${SOURCES[1]} ${SOURCES[2]} ${SOURCES[3]}')
Plot('para','window | grey label2=Distance unit2=km transp=y yreverse=y poly=y  title="Missing 65% traces"')


#Flow('npara','para','noise var=1e-2')
#Result('npara','npara','window j2=5 | grey label2=Distance unit2=km transp=y yreverse=y poly=y  title="Noisy Signal" ')


# Mask for random traces
Flow('mask-logic','para',
     '''
     window n1=1 |
     noise rep=y type=n seed=2008 |
     math output="input^1" |
     mask min=0.15 | cut n1=5 | cut n1=5 f1=115
     ''')
Flow('mask','mask-logic','dd type=float')
Flow('dobs','para mask-logic','headercut mask=${SOURCES[1]}')
Plot('dobs','window | grey label2=Distance unit2=km transp=y yreverse=y poly=y  title="Missing 65% traces"')

Flow('drec','dobs mask',
     '''
     mwni2d mask=${SOURCES[1]} niter=100 verb=y
     ''')

Plot('drec','window | grey label2=Distance unit2=km transp=y yreverse=y poly=y  title="Reconstructed"')


Flow('derr','para drec',
    '''
    add ${SOURCES[1]} scale=-1,1
    ''')
Plot('derr','window | grey label2=Distance unit2=km transp=y yreverse=y poly=y  title="Error panel"')



Result('combined','para dobs drec derr','TwoColumns')



End()
