from rsf.proj import *
import math
from rsf.recipes.beg import server as private

nt=501
dt = 0.008
nf = 300
ot=0
df = 1/(nt*dt)
wf = 2*math.pi


###########################
# Model 1 crossing chirps to prove the correctness
# of decomposition and reconstruction
###########################
Flow('chirp1',None,
     '''
     spike n1=%d d1=1 o1=0 |
     math output="cos(%g*(10+x1/7)*x1/%d)" |
     pad end1=11
     ''' % (nt,2*math.pi,nt))
Plot('chirp1',
       '''
       window n1=%d |put label2=amplitude|
       graph title="signal component 1" labelfat=3 font=2 titlefat=3
       crowd2=0.45 parallel2=n
       wherexlabel=t wheretitle=b plotfat=3
       '''% nt)
Flow('chirp2',None,
     '''
     spike n1=%d d1=1 o1=0 |
     math output="cos(%g*(%d/2.8-x1/6.0)*x1/%d)" |
     pad end1=11
     ''' % (nt,2*math.pi,nt,nt))

Plot('chirp2',
       '''
       window n1=%d |put label2=amplitude|
       graph title="signal component 2" labelfat=3 font=2 titlefat=3
       crowd2=0.45 parallel2=n
       wherexlabel=t wheretitle=b plotfat=3
       '''% nt)


Flow('cchirps','chirp1 chirp2','add ${SOURCES[1]}  scale=1,1 ')
Plot('cchirps',
       '''
       window n1=%d |put label2=amplitude|
       graph title="orignal signal" labelfat=3 font=2 titlefat=3
       crowd2=0.45 parallel2=n   wherexlabel=t wheretitle=b plotfat=3
       '''% nt)

Result('signals',['chirp1','chirp2','cchirps'],'OverUnderAniso')

L=100
C=0.005

Flow('dlct1','chirp1','sfdlct L=%d C=%g'%(L,C))
Flow('dlct2','chirp2','sfdlct L=%d C=%g'%(L,C))
Flow('dlct','cchirps','sfdlct L=%d C=%g'%(L,C))

Plot('dlct1',
       ''' 
	window n1=256|	put o1=0 d1=%f label1=freq |
	math output="abs(input)" | real| scale axis=2 |
	grey wanttitle=y title="DLCT-1" color=j 
	screenwd=10 screenht=40 scalebar=y bartype=v wantaxis2=n
       barwidth=0.2 crowd1=0.75  crowd2=0.45  grid=y pclip=100 allpos=y
       '''%df )
Plot('dlct2',
       ''' 
	window n1=256|	put o1=0 d1=%f label1=freq |
	math output="abs(input)" | real| scale axis=2 |
	grey wanttitle=y title="DLCT-2" color=j 
	screenwd=10 screenht=40 scalebar=y bartype=v wantaxis2=n
       barwidth=0.2 crowd1=0.75  crowd2=0.45  grid=y pclip=100 allpos=y
       '''%df )
Plot('dlct',
       ''' 
	window n1=256|	put o1=0 d1=%f label1=freq |
	math output="abs(input)" | real| scale axis=2 |
	grey wanttitle=y title="DLCT" color=j 
	screenwd=10 screenht=40 scalebar=y bartype=v wantaxis2=n
       barwidth=0.2 crowd1=0.75  crowd2=0.45  grid=y pclip=100 allpos=y
       '''%df )

Result('dlcts',['dlct1','dlct2','dlct'],'SideBySideIso')

# screenwd=4 screenht=10 
Flow('rec','dlct','dlct inv=y C=%g'%(C))

Plot('rec',
       '''
       window n1=%d | put label2=amplitude|
       graph title="DLCT reconstruction" labelfat=3 font=2 \
	titlefat=5 crowd2=0.45 parallel2=n \
       wherexlabel=t wheretitle=b plotfat=3
       '''% nt)


Flow('diff','cchirps rec','add ${SOURCES[1]} scale=-1,1')

Plot('diff',
       '''
       window n1=%d |put label2=amplitude|
       graph title="reconstruction error" labelfat=3 font=2 titlefat=3
       crowd2=0.45 parallel2=n
       wherexlabel=t wheretitle=b plotfat=3
       '''% nt)

Result('cmp','cchirps rec','OverUnderAniso')

#Flow('ltft1 scbasis','cchirps','ltft rect=7 verb=n basis=${TARGETS[1]}')
#Result('ltft1',
#       '''
#       window n1=%d |
#       math output="abs(input)" | real |
#       grey transp=n yreverse=n color=j
#       title="LTF decomposition spectra (smooth=7)"
#       crowd1=0.75 crowd2=0.25
#       labelfat=3 font=2 titlefat=3 parallel2=n
#       ''' % nt)

End()
