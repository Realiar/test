from rsf.proj import *

Fetch('marmvel.hh','marm')

Flow('marm','marmvel.hh',
	'''
	dd form=native |  window j1=3 j2=3 | 
     	put label1=Depth  unit1=m label2=Lateral unit2=m
	''')
Result('marm',
	'''
	grey color=j mean=y title="Marmousi model" scalebar=y 
	bartype=v barlabel="V" 	barunit="m/s" 
	''')

n0=2
nt=2501
dt=0.001

# Compute approximate reflectivity
Flow('refl','marm',
     '''
     depth2time velocity=$SOURCE nt=%d dt=%g |
     ai2refl | ricker1 frequency=15 |
     time2depth velocity=$SOURCE
     '''%(nt, dt))

Result('refl','grey title=Reflectivity titlesz=7 labelsz=5')

Flow('vel','marm','math output="0.5*input"')

Flow('data','refl vel',
     '''
     sfrtm2d vel=${SOURCES[1]} n0=%d nt=%d dt=%g adj=n 
     '''%(n0,nt,dt))

Result('data',
     '''
     grey title="Zero-Offset Data" grid=y 
     label1=Time unit1=s label2=Distance unit2=m
     ''')


Flow('image','data vel',
     '''
     sfrtm2d vel=${SOURCES[1]} n0=%d nt=%d dt=%g adj=y 
     '''%(n0,nt,dt))

Result('image',
     '''
     grey title="image" grid=y label1=Time unit1=s label2=Distance unit2=m
     ''')
# sfdottest sfrtm2d mod=image.rsf dat=data.rsf vel=vel.rsf n0=2 nt=2501 dt=0.001

# least-squares RTM
#Flow('invs','data vel image',
#     '''
#     conjgrad sfrtm2d split=2 n0=2 nt=2500 dt=0.002
#     vel=${SOURCES[1]} mod=${SOURCES[2]} niter=20
#     ''')

Flow('invs','data vel','lsrtm2d vel=${SOURCES[1]} n0=%d nt=%d dt=%g niter=20 verb=y'%(n0,nt,dt))

Result('invs',
     '''
     grey title="LSRTM image" grid=y label1=Time unit1=s label2=Distance unit2=m
     ''')


End()
