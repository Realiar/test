from rsf.proj import *

Flow('one',None,'spike n1=101 d1=1')
Flow('sin','one','math output="100/x1" ')

Result('sin-value','one sin',
       '''
       cat axis=2 ${SOURCES[1]} |
       window min1=10 |
       graph dash=1,0 wanttitle=n min2=0
       label1="frequency slice" unit1=
       label2="v/(4*f*dx)" unit2=
       ''')

ps = (
    (0.34,0.0),
    (0.44,0.4),
    (0.65,-0.4),
    (0.00,1.5708),
    (1.04,-1.5708),
    )
ns = len(ps)

planes = []
for i in range(ns):
    plan = 'plane%d' % i
    mout = 'mout%d' % i
    Flow(mout,None,
         '''
         math n1=256 d1=4 label1=Offset unit1=km
         output="%g+2*sin(%g)*x1/3000"
         ''' % ps[i])
    Flow(plan,mout,'moveout n1=256 d1=0.004')
    planes.append(plan)

    Flow('i'+plan,plan,'bandpass flo=5 fhi=60')

Result('one-plane-wave','iplane1',
       'grey title="One Plane Wave" ')
Result('two-plane-wave','iplane1 iplane2',
       '''
       add ${SOURCES[1]} |
       grey title="Two Plane Waves"
       ''')

Flow('input',planes,
     '''
     add ${SOURCES[1:%d]} |
     scale dscale=%g |
     bandpass flo=5 fhi=60 | 
     costaper nw2=50
     ''' % (ns,1.0/ns))

Flow('omega','input','fft1')

Plot('input',
     '''
     grey titlesz=15 clip=0.04
     title="before transform" 
     ''')

Flow('pyramid','omega','transp | pyramid du=256 nu=512')
Flow('back','pyramid','pyramid inv=y | transp | fft1 inv=y')

Plot('back',
     '''
     grey titlesz=15 clip=0.04
     title="after transform" 
     ''')

Flow('error','input back','add scale=1,-1 ${SOURCES[1]}')
Plot('error',
     '''
     grey titlesz=15 clip=0.04
     title="difference" 
     ''')

Result('forward-inverse-transform','input back error','SideBySideAniso')

End()
