from rsf.proj import *
from rsf.recipes.beg import server

sys.path.append('..')
import segsalt

# 2-D
#####

# get model
segsalt.getvel2D('vel2')

Result('vel2',
       '''
       grey color=j title="Velocity Model" scalebar=y mean=y barreverse=y
       ''')

# lowrank decomposition
Flow('fft','vel2','transp | fft1 | fft3 axis=2 pad=1')

Flow('right left','vel2 fft',
     '''
     transp | scale dscale=0.5 |
     isolr2 seed=2011 dt=0.002 fft=${SOURCES[1]} 
     left=${TARGETS[1]} 
     ''')

# get data
Fetch('exp2.rsf','segsalt',server)

Flow('dexp2','exp2.rsf','dd form=native')

Result('dexp2',
       '''
       window n1=2501 |
       grey title="Zero Offset"
       ''')

# migration
Flow('mig','dexp2 left right',
     '''
     reverse which=1 |
     transp |
     fftexp0 mig=y
     left=${SOURCES[1]} right=${SOURCES[2]}
     nz=201 dz=20
     ''')
Result('mig','grey title="Zero-Offset Migration" unit2=m')

# 3-D
#####

# get model
segsalt.getvel3D('vel3')
     
Result('vel3',
       '''
       byte gainpanel=all mean=y |
       grey3 frame1=100 frame2=350 frame3=350 point1=0.4 point2=0.7
       flat=n color=j title="SEG/EAGE Salt Model" 
       ''')

# Lowrank decomposition

# (z,x,y) -> (x,y,z)
Flow('vel1','vel3',
     '''
     window j1=2 j2=2 j3=2        |
     transp plane=12 memsize=1000 | 
     transp plane=23 memsize=1000
     ''')
Flow('fft3','vel1','fft1 | fft3 axis=2 pad=1 | fft3 axis=3 pad=1')

Flow('right3 left3','vel1 fft3',
     'isolr3 seed=2010 npk=10 eps=1e-6 dt=0.002 fft=${SOURCES[1]} left=${TARGETS[1]}')

# Get data
Fetch('exp3.rsf','segsalt',server)

Flow('dexp3','exp3.rsf','dd form=native')

Result('dexp3',
       '''
       window n1=2501 |
       byte gainpanel=all |
       grey3 frame1=1250 frame2=175 frame3=175 point1=0.4 point2=0.7
       flat=n title="Zero-Offset Exploding Reflector Modeling" 
       ''')

# Migration

Flow('mig3','dexp3 left3 right3',
     '''
     reverse which=1 |
     transp plane=12 memsize=1000 | 
     transp plane=23 memsize=1000 | 
     fftexp3 mig=y
     left=${SOURCES[1]} right=${SOURCES[2]}
     nz=105 dz=0.04
     ''')

Result('mig3',
       '''
       byte gainpanel=all | 
       grey3 frame2=175 frame3=175 frame1=50 point1=0.4 point2=0.7
       flat=n title="Zero-Offset Exploding Reflector Migration" unit3=km
       ''')

End()
