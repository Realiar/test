from rsf.proj import *

par = {
    'nz':751,  'dz':0.004, 'oz':0.0,  # Depth
    'nx':2301, 'dx':0.004, 'ox':0.0,  # Lateral
    'smz':15, 'smx':15,               # Smoothing radius for slowness
    'na':720,                         # Number of take-off angles
    'oazmin':80,'oazmax':50,          # Opening angle mute
    'dazmin':100,'dazmax':50,         # Dip angle mute
    'ts':4,'th':6,                    # Tapering
    'smax':0.15,'hmax':0.15,          # Escape tables filter
# Screen params for the model
    'scrpar':'''screenratio=0.32 screenht=4.5
                yll=2.0 xll=1.5 crowd=0.8 labelsz=6
                o2num=0.0 d2num=1.0 n2tic=4
                o1num=0.0 d1num=1.0 n1tic=10
                barmove=y tickscale=0.3
                barwidth=0.2 label2= unit2=''',
# Screen params for CIGs
    'scrpar2':'''yreverse=y wanttitle=n wherexlabel=top
                 transp=y poly=y plotcol=7 gridcol=8
                 screenht=10 screenratio=1.25
                 unit2="\F16 \^g\_\F-1 "'''
}

# Prepare model
###############

Fetch('marmvel.hh','marm')
Flow('vel','marmvel.hh',
     '''
     dd form=native |
     put label1=Depth unit1=m label2=Lateral unit2=m
         o1=0 o2=0 d1=0.004 d2=0.004 title= |
     math output="0.001*input" | math output="1.0/input" |
     smooth rect1=%(smz)d rect2=%(smx)d repeat=2 |
     math output="1.0/input"
     ''' % par)

Result('marmvel','vel','''
       grey title= wantitle=n allpos=y color=j
            pclip=100 scalebar=y bartype=h
            barlabel="V" barunit="km/s"
            dbarnum=1.0 obarnum=1.5
            bias=1.5 minval=1.5 maxval=5.5
            %(scrpar)s
       ''' % par)

Flow('vspl','vel','bspvel2 verb=y')

# Escape tables with ray tracing in reduced phase space
###############

Flow('marmnesc',['vel','vspl'],'''
     escrt2 verb=y na=%(na)d vspl=${SOURCES[1]}
     ''' % par, split=[2,par['nx'],[0]], reduce='cat axis=4')

# Angle migration
###############

#Fetch("marmrefl.hh","marm")
#Flow('data',"marmrefl.hh",
#     '''
#     dd form=native | 
#     reverse which=2 |
#     put label1=Time label2=Offset unit2=km unit1=s
#         label3=Shot unit3=km d2=-0.025 d3=0.025 o2=-0.2 o3=3 |
#     pcrdata2 absoff=n KMAH=y filter=y verb=y
#     ''')

# Use remodelled data instead (FFD by Xiaolei Song)
Flow('data','marmshotsffd.rsf','''
     pcrdata2 absoff=y KMAH=y filter=y verb=y
     ''')

# Migration
Flow(['marmocram','marmdcram','marmoill','marmdill','marmosmb'],
     ['marmnesc','data','vel'],'''
     cram2 data=${SOURCES[1]} vz=${SOURCES[2]}
           mute=y oazmin=%(oazmin)g oazmax=%(oazmax)g
                  dazmin=%(dazmin)g dazmax=%(dazmax)g
                  ts=%(ts)d th=%(th)d smax=%(smax)g hmax=%(hmax)g
           dipagath=${TARGETS[1]}
           imap=${TARGETS[2]} dipimap=${TARGETS[3]}
           smap=${TARGETS[4]}
     ''' % par, split=[4,par['nx'],[0]], reduce='cat axis=3')

# Plotting
###############

# Stack
Flow('marmdcrstk',['marmdill','marmdcram'],'''
     dd type=float |
     math d=${SOURCES[1]} output="d/(input+1)" |
     stack axis=1
     ''')

Result('marmdcrstk','''
       grey title= wantitle=n pclip=99.7 scalebar=n
            %(scrpar)s
       ''' % par)

# Image gathers
cigs = [2,4,6,8]
for i in range(len(cigs)):
    ocig = 'marmocig%d' % i
    dcig = 'marmdcig%d' % i
    Result(ocig,'marmocram','''
           window sfwindow min3=%g max3=%g j1=3 | transp |
           wiggle pclip=99.8 zplot=1.2 label2="\F10 g \F-1 " %s
           ''' % (cigs[i],cigs[i],par['scrpar2']))
    Result(dcig,'marmdcram','''
           window sfwindow min3=%g max3=%g j1=8 | transp |
           wiggle pclip=99.8 zplot=1.2 label2="\F10 v \F-1 " %s
           ''' % (cigs[i],cigs[i],par['scrpar2']))

End()

