*********************************************
*****************READ ME*********************
*********************************************




*********************************************************
Header Files
*********************************************************

bfio.hh     



*********************************************************
Main Programs
*********************************************************

Mradon2.cc    2to2 Radon transform (using 2to2 butterfly)
              complex f(w,x) --> complex u(tau,p)
              BFIO::setup2
              BFIO::kernel2    fi=1 hyper Radon
                               fi=2 adjoint of hyper Radon
                               fi=3 x*k
                               fi=4 -x*k
              BFIO::check2
              BFIO::eval2

Mradon3.cc    3to3 Radon transform (using 3to3 butterfly)
              complex f(w,x,y) --> complex u(tau,p,q)
              BFIO::setup3
              BFIO::kernel3    fi=0 linear Radon
                               fi=1 reflection Radon             
                               fi=2 diffraction Radon
                               fi=3 adjoint of reflection Radon  
                               fi=4 adjoint of diffraction Radon
              BFIO::check3
              BFIO::eval3

Mradon32.cc   azimuthally isotropic 3to2 Radon transform (using 2to2 butterfly)
              complex f(w,x1,x2) --> complex u(tau,p)
              BFIO::setup32    
              BFIO::kernel2    fi=1 hyper Radon
              BFIO::check2
              BFIO::eval2

Mapradon2.cc  apex shifted 2to3 Radon transform (using 2to2 butterfly)
              complex f(w,x) --> complex u(tau,p,x)
              BFIO::setup2 
              BFIO::apkernel2   fi=1 apex shifted hyper Radon
              BFIO::apcheck2
              BFIO::apeval2

Mradon34.cc   azimuthally anisotropic 3to4 Radon transform (using 3to3 butterfly)
              complex f(w,x,y) --> complex u(tau,p,q,s)
              BFIO::setup3
              BFIO::kernel34    fi=1  p=sqrt(W11);  q=sqrt(W22);  s=W12;
                                fi=2  p=Wcos;    q=Wsin;    s=Wavg;
              BFIO::check34
              BFIO::eval34


Mdiradon2.cc  direct 2to2 hyper Radon transform (single integral, nearest point interpolation)
              real f(t,x) --> real u(tau,p)

Mdiiradon2.cc direct 2to2 hyper Radon transform (double integral, exact)
              complex f(w,x) --> complex u(tau,p)

Madiradon2.cc direct adjoint 2to2 hyper Radon transform (single integral, nearest point interpolation)
              real f(tau,p) --> real u(t,x)

Mdiradon32.cc direct azimuthally isotropic 3to2 hyper Radon transform
              real f(t,x1,x2) --> real u(tau,p)

Mdiradon3.cc  direct 3to3 reflection/diffraction Radon transform
              real f(t,x,y) --> real u(tau,p,q)
              BFIO::dikernel3    fi=1 direct reflection Radon      
                                 fi=2 direct diffraction Radon

Mdiradon34.cc direct azimuthally anisotropic 3to4 full Radon transform (double integral, nearest point interpolation)
              real f(t,x,y) --> real u(tau,p,q,s)
              fi=1  p=sqrt(W11);  q=sqrt(W22);  s=W12;
              fi=2  p=Wcos;    q=Wsin;    s=Wavg;

Msum.cc       adjoint test 
              check <f1,f2>?=<g1,g2>
              complex f1(t,x), f2(t,x), g1(t,x), g2(t,x)

Msum3.cc      adjoint test
              check <f1,f2>?=<g1,g2>
              complex f1(t,x,y), f2(t,x,y), g1(t,x,y), g2(t,x,y)

Msthres.cc    soft thresholding function



********************************************************
Auxiliary Files
********************************************************

bfio.bin   

bfio.cc         BFIO::setup2 
                BFIO::setup32
                BFIO::setup3

                BFIO::kernel2    
                BFIO::apkernel2  
                BFIO::kernel3    
                BFIO::dikernel3  
                BFIO::kernel34   

                BFIO::check2 
                BFIO::apcheck2
                BFIO::check3
                BFIO::check34
                

bfio_eval2.cc   2to2 butterfly
                BFIO::prep_aux
                BFIO::eval2       if fi=1 or 3, switch at L/2 (even L), (L-1)/2 (odd L)
                                  if fi=2 or 4, switch at L/2 (even L), (L+1)/2 (odd L)

bfio_eval3.cc   3to3 butterfly
                BFIO::prep_aux
                BFIO::eval_addaux
                BFIO::eval3       if fi=1 or 2, switch at L/2 (even L), (L-1)/2 (odd L)
                                  if fi=3 or 4, switch at L/2 (even L), (L+1)/2 (odd L)

bfio_apeval2.cc 2to2 butterfly (apex shifted Radon)
                BFIO::prep_aux
                BFIO::apeval2

bfio_eval34.cc  3to3 butterfly (full Radon)
                BFIO::prep_aux
                BFIO::eval_addaux
                BFIO::eval34




